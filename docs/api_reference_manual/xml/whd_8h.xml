<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="whd_8h" kind="file" language="C++">
    <compoundname>whd.h</compoundname>
    <includes refid="whd__types_8h" local="yes">whd_types.h</includes>
    <includedby refid="whd__wifi__api_8h" local="yes">whd_wifi_api.h</includedby>
    <includedby refid="whd__events_8h" local="yes">whd_events.h</includedby>
    <includedby refid="whd__network__types_8h" local="yes">whd_network_types.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>whd.h</label>
        <link refid="whd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>whd_types.h</label>
        <link refid="whd__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cy_result.h</label>
      </node>
      <node id="5">
        <label>cyhal_hw_types.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>whd.h</label>
        <link refid="whd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>whd_network_types.h</label>
        <link refid="whd__network__types_8h"/>
      </node>
      <node id="4">
        <label>whd_events.h</label>
        <link refid="whd__events_8h"/>
      </node>
      <node id="3">
        <label>cybsp_wifi.h</label>
        <link refid="cybsp__wifi_8h"/>
      </node>
      <node id="2">
        <label>whd_wifi_api.h</label>
        <link refid="whd__wifi__api_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structwhd__init__config__t" prot="public">whd_init_config_t</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="whd_8h_1ac45015d82e65db891b463066873eca4f" prot="public" static="no">
        <type>struct whd_driver *</type>
        <definition>typedef struct whd_driver* whd_driver_t</definition>
        <argsstring></argsstring>
        <name>whd_driver_t</name>
        <briefdescription>
<para>Abstract pointer type that acts as a handle to an instance of the driver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h" line="35" column="25" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" prot="public" static="no">
        <type>struct whd_interface *</type>
        <definition>typedef struct whd_interface* whd_interface_t</definition>
        <argsstring></argsstring>
        <name>whd_interface_t</name>
        <briefdescription>
<para>Abstract pointer type to handle instance of whd interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h" line="40" column="28" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="whd_8h_1a05847ad8fa418d69d5f51fe654835b8b" prot="public" static="no">
        <type>struct whd_resource_source</type>
        <definition>typedef struct whd_resource_source whd_resource_source_t</definition>
        <argsstring></argsstring>
        <name>whd_resource_source_t</name>
        <briefdescription>
<para>Abstract type that acts as a handle to an instance of a resource function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h" line="40" column="28" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="whd_8h_1af5e9a147a89968d2026fd7720a519bbd" prot="public" static="no">
        <type>struct whd_bus_funcs</type>
        <definition>typedef struct whd_bus_funcs whd_sdio_funcs_t</definition>
        <argsstring></argsstring>
        <name>whd_sdio_funcs_t</name>
        <briefdescription>
<para>Abstract type that acts as a handle to an instance of a bus function used for SDIO specific functionality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h" line="40" column="28" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="whd_8h_1a7373cb0b0ef75e1b740fd53c77bda5e4" prot="public" static="no">
        <type>struct whd_bus_funcs</type>
        <definition>typedef struct whd_bus_funcs whd_spi_funcs_t</definition>
        <argsstring></argsstring>
        <name>whd_spi_funcs_t</name>
        <briefdescription>
<para>Abstract type that acts as a handle to an instance of a bus function used for SPI specific functionality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h" line="40" column="28" bodyfile="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides abstract pointer type to act as instance for: driver, interface, buffer funcs, network funcs, resource funcs and bus funcs. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2020<sp/>Cypress<sp/>Semiconductor<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="whd__types_8h" kindref="compound">whd_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_WHD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_WHD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">whd_driver<sp/>*<ref refid="whd_8h_1ac45015d82e65db891b463066873eca4f" kindref="member">whd_driver_t</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">whd_interface<sp/>*<ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwhd__buffer__funcs" kindref="compound">whd_buffer_funcs</ref><sp/>whd_buffer_funcs_t;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwhd__netif__funcs" kindref="compound">whd_netif_funcs</ref><sp/>whd_netif_funcs_t;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">whd_resource_source<sp/><ref refid="whd_8h_1a05847ad8fa418d69d5f51fe654835b8b" kindref="member">whd_resource_source_t</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">whd_bus_funcs<sp/><ref refid="whd_8h_1af5e9a147a89968d2026fd7720a519bbd" kindref="member">whd_sdio_funcs_t</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">whd_bus_funcs<sp/><ref refid="whd_8h_1a7373cb0b0ef75e1b740fd53c77bda5e4" kindref="member">whd_spi_funcs_t</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structwhd__init__config__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">whd_init_config</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_stack_start;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>thread_stack_size;<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>thread_priority;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="whd__types_8h_1a5adb0953a8527552bc47001673830602" kindref="member">whd_country_code_t</ref><sp/>country;<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/><ref refid="structwhd__init__config__t" kindref="compound">whd_init_config_t</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_WHD_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/sprint/scl_scl_mtb_integration_review/scl_doxygen_documentation/inc/whd.h"/>
  </compounddef>
</doxygen>
