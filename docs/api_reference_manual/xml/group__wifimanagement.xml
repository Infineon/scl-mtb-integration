<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__wifimanagement" kind="group">
    <compoundname>wifimanagement</compoundname>
    <title>WHD Wi-Fi Management API</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wifimanagement_1ga1c8bf41b593cb947266f8690d495f381" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_on</definition>
        <argsstring>(whd_driver_t whd_driver, whd_interface_t *ifpp)</argsstring>
        <name>whd_wifi_on</name>
        <param>
          <type>whd_driver_t</type>
          <declname>whd_driver</declname>
        </param>
        <param>
          <type>whd_interface_t *</type>
          <declname>ifpp</declname>
        </param>
        <briefdescription>
<para>Turn on the Wi-Fi device. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialise Wi-Fi platform Program various WiFi parameters and modes</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="structwhd__driver" kindref="compound">whd_driver</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of the driver </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ifpp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Pointer to handle instance of whd interface</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS if initialization is successful, error code otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/whd_wifi_api.h" line="63" column="17" declfile="source/whd_wifi_api.h" declline="63" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__wifimanagement_1ga422587a9b104a871233a42aceb2141d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_off</definition>
        <argsstring>(whd_interface_t ifp)</argsstring>
        <name>whd_wifi_off</name>
        <param>
          <type>whd_interface_t</type>
          <declname>ifp</declname>
        </param>
        <briefdescription>
<para>Turn off the Wi-Fi device. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>De-Initialises the required parts of the hardware platform i.e. pins for SDIO/SPI, interrupt, reset, power etc.</para>
</listitem><listitem><para>De-Initialises the whd thread which arbitrates access to the SDIO/SPI bus</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS if deinitialization is successful, Error code otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/whd_wifi_api.h" line="78" column="17" declfile="source/whd_wifi_api.h" declline="78" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__wifimanagement_1gab7d6e59874922e5646e08e52082e32f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_deinit</definition>
        <argsstring>(whd_interface_t ifp)</argsstring>
        <name>whd_deinit</name>
        <param>
          <type>whd_interface_t</type>
          <declname>ifp</declname>
        </param>
        <briefdescription>
<para>Shutdown this instance of the wifi driver, freeing all used resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/whd_wifi_api.h" line="86" column="17" declfile="source/whd_wifi_api.h" declline="86" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__wifimanagement_1ga925da3b1ed914d7bb661d3cb2af50680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_set_up</definition>
        <argsstring>(whd_interface_t ifp)</argsstring>
        <name>whd_wifi_set_up</name>
        <param>
          <type>whd_interface_t</type>
          <declname>ifp</declname>
        </param>
        <briefdescription>
<para>Brings up the Wi-Fi core. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/whd_wifi_api.h" line="94" column="17" declfile="source/whd_wifi_api.h" declline="94" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__wifimanagement_1ga412c2d4653a7c36329c6cf78be344336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_set_down</definition>
        <argsstring>(whd_interface_t ifp)</argsstring>
        <name>whd_wifi_set_down</name>
        <param>
          <type>whd_interface_t</type>
          <declname>ifp</declname>
        </param>
        <briefdescription>
<para>Bring down the Wi-Fi core. </para>
        </briefdescription>
        <detaileddescription>
<para>WARNING / NOTE: This brings down the Wi-Fi core and existing network connections will be lost.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/whd_wifi_api.h" line="105" column="17" declfile="source/whd_wifi_api.h" declline="105" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__wifimanagement_1ga553c009e9f6f856dfe243d745e21bbf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_add_secondary_interface</definition>
        <argsstring>(whd_driver_t whd_drv, whd_mac_t *mac_addr, whd_interface_t *ifpp)</argsstring>
        <name>whd_add_secondary_interface</name>
        <param>
          <type>whd_driver_t</type>
          <declname>whd_drv</declname>
        </param>
        <param>
          <type><ref refid="structwhd__mac__t" kindref="compound">whd_mac_t</ref> *</type>
          <declname>mac_addr</declname>
        </param>
        <param>
          <type>whd_interface_t *</type>
          <declname>ifpp</declname>
        </param>
        <briefdescription>
<para>Creates a secondary interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>whd_drv</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of the driver </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mac_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>MAC address for the interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ifpp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the whd interface pointer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/whd_wifi_api.h" line="115" column="17" declfile="source/whd_wifi_api.h" declline="115" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Initialisation and other management functions for WHD system. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
